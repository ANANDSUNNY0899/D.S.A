#include <iostream>
using namespace std;

// Definition of the Node class
class Node {
public:
    int data;
    Node *next;
    Node(int data) {
        this->data = data;
        this->next = NULL;
    }
};

// Function to reverse a singly linked list
Node* reverseLinkedList(Node *head) {
    Node *prev = NULL;
    Node *current = head;
    Node *nextNode = NULL;
    while (current != NULL) {
        nextNode = current->next;
        current->next = prev;
        prev = current;
        current = nextNode;
    }
    return prev; // New head of the reversed linked list
}

// Function to print the linked list
void printLinkedList(Node *head) {
    Node *temp = head;
    while (temp != NULL) {
        cout << temp->data << " ";
        temp = temp->next;
    }
    cout << "-1" << endl;
}

int main() {
    // Input linked list
    Node *head = NULL;
    Node *tail = NULL;
    int data;
    cin >> data;
    while (data != -1) {
        Node *newNode = new Node(data);
        if (head == NULL) {
            head = newNode;
            tail = newNode;
        } else {
            tail->next = newNode;
            tail = newNode;
        }
        cin >> data;
    }

    // Reverse the linked list
    head = reverseLinkedList(head);

    // Print the reversed linked list
    printLinkedList(head);

    // Free memory
    Node *temp;
    while (head != NULL) {
        temp = head;
        head = head->next;
        delete temp;
    }

    return 0;
}
