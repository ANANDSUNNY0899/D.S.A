#include <iostream>

// Definition of doubly linked list node
struct Node {
    int data;
    Node *prev;
    Node *next;
    Node() : data(0), prev(nullptr), next(nullptr) {}
    Node(int val) : data(val), prev(nullptr), next(nullptr) {}
    Node(int val, Node *p, Node *n) : data(val), prev(p), next(n) {}
};

// Function to delete the last node from the doubly linked list
Node *deleteLastNode(Node *head) {
    // If the list is empty or contains only one node
    if (head == nullptr || head->next == nullptr) {
        delete head; // Free memory of the single node or the head
        return nullptr; // Return nullptr since the list is now empty
    }

    // Traverse the list to find the last node
    Node *temp = head;
    while (temp->next != nullptr) {
        temp = temp->next;
    }

    // temp now points to the last node
    temp->prev->next = nullptr; // Update previous node's next pointer
    delete temp; // Free memory of the last node
    return head; // Return the head of the updated list
}

// Utility function to print the doubly linked list
void printList(Node *head) {
    Node *temp = head;
    while (temp != nullptr) {
        std::cout << temp->data << " ";
        temp = temp->next;
    }
    std::cout << std::endl;
}

// Test main function
int main() {
    // Create a doubly linked list: 1 <-> 2 <-> 3 <-> 4 <-> 5
    Node *head = new Node(1);
    head->next = new Node(2, head, nullptr);
    head->next->next = new Node(3, head->next, nullptr);
    head->next->next->next = new Node(4, head->next->next, nullptr);
    head->next->next->next->next = new Node(5, head->next->next->next, nullptr);

    std::cout << "Original list: ";
    printList(head);

    // Delete the last node
    head = deleteLastNode(head);

    std::cout << "List after deleting the last node: ";
    printList(head);

    return 0;
}


This code defines a doubly linked list node structure (Node) and provides a function (deleteLastNode) to delete the last node from the list.
It also includes a utility function (printList) to print the contents of the list and a test main function to demonstrate how to use the deleteLastNode function.
