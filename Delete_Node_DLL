#include <iostream>

// Given class Node
class Node {
public:
    int data;
    Node *next;
    Node *prev;

    Node(int val) {
        this->data = val;
        next = nullptr;
        prev = nullptr;
    }
};

// deleteNode function
void deleteNode(Node *node) {
    if (node == nullptr)
        return;
    
    Node *prevNode = node->prev;
    Node *nextNode = node->next;

    if (prevNode != nullptr)
        prevNode->next = nextNode;

    if (nextNode != nullptr)
        nextNode->prev = prevNode;

    delete node;
}

int main() {
    // Create a sample linked list
    Node *head = new Node(1);
    Node *second = new Node(2);
    Node *third = new Node(3);

    head->next = second;
    second->prev = head;
    second->next = third;
    third->prev = second;

    // Delete the second node
    std::cout << "Deleting the second node...\n";
    deleteNode(second);

    // Print the updated list
    Node *current = head;
    while (current != nullptr) {
        std::cout << current->data << " ";
        current = current->next;
    }
    std::cout << std::endl;

    // Free memory
    delete head;
    delete third;

    return 0;
}
