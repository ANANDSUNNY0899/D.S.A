#include <vector>
using namespace std;

pair<int, int> firstAndLastPosition(vector<int>& arr, int n, int k) {
    // Initialize variables to store the first and last occurrence indices
    int first = -1;
    int last = -1;
    
    // Perform binary search to find the first occurrence of k
    int low = 0;
    int high = n - 1;
    while (low <= high) {
        int mid = low + (high - low) / 2;
        if (arr[mid] == k) {
            first = mid; // Update first occurrence index
            high = mid - 1; // Continue searching in the left half
        } else if (arr[mid] < k) {
            low = mid + 1;
        } else {
            high = mid - 1;
        }
    }
    
    // Reset low and high for finding the last occurrence
    low = 0;
    high = n - 1;
    while (low <= high) {
        int mid = low + (high - low) / 2;
        if (arr[mid] == k) {
            last = mid; // Update last occurrence index
            low = mid + 1; // Continue searching in the right half
        } else if (arr[mid] < k) {
            low = mid + 1;
        } else {
            high = mid - 1;
        }
    }
    
    // Return the pair of first and last occurrences
    return make_pair(first, last);
}
